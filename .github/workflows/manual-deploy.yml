name: Manual Deploy to GCP

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging
      memory:
        description: 'Memory allocation'
        required: false
        default: '1Gi'
        type: choice
        options:
        - 512Mi
        - 1Gi
        - 2Gi
      cpu:
        description: 'CPU allocation'
        required: false
        default: '1'
        type: choice
        options:
        - '1'
        - '2'
      max_instances:
        description: 'Maximum instances'
        required: false
        default: '10'
        type: string

env:
  PROJECT_ID: retirementchat
  SERVICE_NAME: retirechat
  REGION: us-central1

jobs:
  manual-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Configure Docker for Google Cloud
      run: gcloud auth configure-docker

    - name: Deploy with Custom Settings
      run: |
        SERVICE_NAME_FULL="${{ env.SERVICE_NAME }}-${{ github.event.inputs.environment }}"
        if [ "${{ github.event.inputs.environment }}" = "production" ]; then
          SERVICE_NAME_FULL="${{ env.SERVICE_NAME }}"
        fi
        
        gcloud run deploy $SERVICE_NAME_FULL \
          --source . \
          --platform managed \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --memory ${{ github.event.inputs.memory }} \
          --cpu ${{ github.event.inputs.cpu }} \
          --max-instances ${{ github.event.inputs.max_instances }} \
          --set-env-vars GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}

    - name: Get Service URL
      id: get-url
      run: |
        SERVICE_NAME_FULL="${{ env.SERVICE_NAME }}-${{ github.event.inputs.environment }}"
        if [ "${{ github.event.inputs.environment }}" = "production" ]; then
          SERVICE_NAME_FULL="${{ env.SERVICE_NAME }}"
        fi
        
        URL=$(gcloud run services describe $SERVICE_NAME_FULL \
          --platform managed \
          --region ${{ env.REGION }} \
          --format 'value(status.url)')
        echo "url=$URL" >> $GITHUB_OUTPUT

    - name: Summary
      run: |
        echo "🎉 Manual deployment completed!"
        echo "📍 Environment: ${{ github.event.inputs.environment }}"
        echo "💾 Memory: ${{ github.event.inputs.memory }}"
        echo "⚡ CPU: ${{ github.event.inputs.cpu }}"
        echo "📈 Max Instances: ${{ github.event.inputs.max_instances }}"
        echo "🌐 URL: ${{ steps.get-url.outputs.url }}" 